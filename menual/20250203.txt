text-shadow 속성 :
  글자에 그림자를 주는 속성 x좌표, y좌표, (흐림), 색
  흐림의 경우 optional로 어느 정도로 흐리게 표현할지를 결정

  textshadow.html 관련 만드세요

  -> ctrl + shift + i : 개발자도구 바로 들어가기
  -> cmd + option + i : 개발자도구 바로 들어가기

  거기서 control + shift + c 눌러서 특정 요소 선택하고, css 변경 가능


문단 / 목록 스타일
  : 한정된 공간에 텍스트를 여러 줄로 나누는 문단. 
  목록 스타일 관련 CSS 학습 -> 태그로 해 왔지만, CSS로 표현하는 단계

  1. 정렬 / 간격 :
    텍스트를 좌우 혹은 가운데로 정렬하거나 자간(글자 간격), 줄 높이, 들여쓰기 등 지정 가능

    1) text-align 속성 :
      1-1. left : 왼쪽
      1-2. right : 오른쪽
      1-3. justify : 양쪽 정렬
      1-4. center : 가운데 정렬

    2) line-height 속성 :
      줄 높이 조정 -> 일반적으로는 글자 크기의 1.5배 / 1.5em의 줄 높이를 많이 사용.
        클 수록 행간이 넓아지고, 작을 수록 행간이 줄어듭니다.

    3) letter-spacing / word-spacing 속성 :
      letter-spacing : 자간 / px, em 단위로 글자 간격을 임의로 조절
      word-spacing : 단어 간의 간격 / 공백(스페이스바)의 간격을 임의로 조절

      textalign 만드세요

    4) text-indent 속성 :
      각 문단의 시작 부분을 들여 쓰기 할 때 쓰는 속성으로
      양수 입력 시에 em 단위로 들여쓰기가 지정됨.
      음수 입력 시에 em 단위로 내어쓰기가 지정됨.


목록 스타일
  HTML 파트에서 ul태그와 ol태그, li 태그에서 CSS를 통해서 꾸밀 수 있다고 수업 했었습니다.
  default값들이 li에 정해져 있는데, 그 부분을 바꾸는 방식에 대해서 수업합니다.

  liststyle 생성하세요




Chapter07 : 인라인과 블록 및 박스 모델 관련 수업

  1. 인라인 요소 / 블록 요소 :
    진짜 여태까지 배운 것 보다 CSS에서 제일 중요한 부분에 해당합니다.
      -> 웹 페이지의 공간을 구성하는 기본 방식에 해당하기 때문에
          이 두 개념을 확실히 알고 넘어가셔야 웹사이트를 만드는 관정이 좀 수월해집니다.

    1) 기본 너비와 개념 :
      HTML의 경우 기능이 포함된 태그들이 많으나
      span태그 div태그의 경우는 기능 그 자체가 있는 것이 아니라 구획을 나눠주는 역할을 합니다.

      해당 태그들의 차이는 블록 요소인지 혹은 인라인 요소인지에 대한 차이입니다.

      01_inlineblock01 생성하세요

      inline vs. block

      inline : 글자가 차지하는 만큼의 너비를 의미함
      block : 한 줄을 기준으로 전체를 채우는 역할

      00_example 생성하세요

      display : inline-block -> 기본적으로 인라인 요소의 속성을 가지면서 너비와 높이 조절이 가능
      

    2) 너비와 높이 조절 : 
      width 속성 
      height 속성 -> 00_example.css 파트 확인 할 것

      inline / block / inline-block의 성격상의 차이입니다.
      inline : span태그오 ㅏ같이 글자가 차지하는 범위만큼의 구역
      block : 글자가 있는 브라우저상의 가로줄 : 너비 / 높이 조절 가능
      inline-block : 기본적으로 글자가 차지하는 범위만큼의 구역이지만 너비 / 높이 조절이 가능


    3) 가로 공간 :
      width를 지정하지 않을 경우 인라인 요소는 컨텐츠 너비 만큼만, 
      블록 요소는 줄 전체 공간 차지한다는 것을 확인 가능.

      가로공간을 전체 차지하는 블록 요소를 inline-block으로 지정했을 때의 예시


    4) 여백 적용하기 : 
      margin : 컨텐츠 요소의 바깥쪽 여백 지정
      padding : 컨텐츠 요소의 안쪽 여백 지정



01파트로 넘어갑니다.

실습 한 번 하겠습니다.
02_inlineblock02 생성하세요

애국가 작성 후에 확인할 점 :
  p태그의 경우 block요소 입니다.
  그렇기 때문에 나타나는 점이 결과 화면상 오른쪽 빈 공간이 너무 많다는 점.

  오른쪽 빈 공간 없이 가사가 잘 구분이 될 수 있도록 작성하려면 어떻게 해야 할 지 고민.




  2. 박스 모델 :

    1) 요소의 크기 :
      width / height 속성을 통해 block / inline-block의 경우 크기를 조절 가능합니다.
      -> 고정값 크기의 경우 px 사용 (이전까지 학습을 그런 방식으로 했습니다.)

      -> 하지만 웹사이트는 브라우저나 디바이스에 따라 화면의 크기가 유동적으로 변합니다.
      따라서 어떤 요소의 크기를 고정해버리면(절대값을 사용하는 경우), 가독성이 떨어지는 문제가 발생합니다.

      -> 이상의 문제를 해결하기 위해 상대값으로 %를 사용하게 되면 해당 요소는 부모 크기에 비례한 길이가 됩니다.

      ex) width 속성을 100% 줬다면 부모에 맞는 크기가 되기 때문에 
      창의 크기를 어떻게 조절하더라도 너비가 꽉 찬 상태를 유지하게 됩니다. (height도 마찬가지)

      03_example 생성하세요

      그 결과 디바이스에 따라서 유동적으로 크기를 조절할 때 유용한 기능 :
        -> 뷰포드(viewport) : 간단하게 생각했을 때 '브라우저의 크기'

          1-1. vw(viewport width) : 뷰포트를 기준으로 했을 때의 너비가
          1-2. vh(viewport height) : 뷰포트를 기준으로 했을 때의 높이

        라는 단위가 존재합니다. -> 1/100로 나누어 놨습니다.

          1-3. vmax(viewport max) : 상대적으로 길이가 긴 쪽
          1-4. vmin(viewport min) : 상대적으로 길이가 짧은 쪽

          -> 마찬가지로 1/100으로 나누어놨습니다.

        3, 4의 경우 컴퓨터 모니터의 경우 일반적으로 가로 길이 > 세로 길이인데 반해 
        모바일의 경우 가로 길이 < 세로 길이 와 같은 방식으로 유동적으로 창의 크기가 변하는 경우에 사용됨.

          1-5. calc() 함수 : 매개변수를 이용해서 CSS에서 특정한 수치를 계산하는 함수
            ex) width에 calc(100% + 100px)을 넣는다면,
            상대값 100%의 수치에 100px 더 많도록 나타내는 방식.

            마찬가지로 vw, vh도 적용 가능.
            padding이 적용되어 있을 때 사용하는데,
            ex) 요소 안 쪽 24px의 padding이 잡혀있다면, 원하는 상대값에서 24px을 두 번 뺀
            calc(100% - 48px)로 넣어야 원하는 길이가 측정 가능함.


    2) 바깥 쪽 여백 vs. 안 쪽 여백
      여백의 개념이 박스 모델링에 있어서 필수적인 부분에 해당.

      2-1. margin 속성 :
        마진 지정 방식
          (1) margin 값을 하나로 지정하는 방법 :
            기본적으로 여백은 모든 부분에 공통적으로 적용됨.
            ex) margin: 24px로 지정할 경우
            컨텐츠 상하좌우 모든 방향에 24px의 margin 영역이 발생함.
            em 지정의 경우도 동일함.
            0의 경우는 단위 지정 안해도 됨.
          
          (2) margin 값을 두 개로 지정하는 방법 :
            첫 번째 값 : 컨텐츠 세로 영역
            두 번째 값 : 컨텐즈 가로 영역


내일 padding 부터 수업
      
      2-1. pdding 속성 :
        컨텐츠의 안 쪽 여백을 지정하는 방법 -> margin이랑 동일함
          (1) padding 값을 하나로 지정하는 경우. 상하좌우
          (2) padding 값을 두 개로 지정하는 경우. 위아래 / 좌우
          (3) padding 값을 네 개로 지정하는 경우. 위쪽부터 시계 방향
          (4) padding 값을 세 개로 지정하는 경우. 위 / 좌우 / 아래

          .div1 / .div2로 나누었을 때 확인해야 할 점
          (1) class selector 클래스 선택자를 다시 사용했습니다.
          (2) .div1에 margin: 24px; div2에 margin: 24px;을 먹였으면,
          1의 아래쪽 마진 24px과 2의 위쪽 마진 24px을 합쳐 48px의 빈 공간이 나타나지 않는다는 점
            -> 그 이유는 블록 요소의 위 아래 마진은 전후 블록 요소의 것과 '상쇄'됩니다.
            특정 요소가 더 긴 마진 값을 지니고 있다면 더 긴 마진을 기준으로 생성됨.


04_marginpadding 생성
  -> top / bottom / left / right 관련 수업합니다


  ※ auto 값 : 너비가 지정된 블록 요소의 가로 방향에서 남은 공간을 자동으로 채우는 방식
    -> 블록을 가운데로 정렬할 때 사용하면 좋음. 근데 위 아래는 적용 안 됨.
    -> 05_example생성 / 06_marginauto 생성

    margin: 0 auto;를 적용했을 때, auto 값을 가지고 중앙에 배치되는 것을 확인할 수 있음
      -> div가 기본적으로 block 요소이기 때문.

      -> 그래서 display: inline-block을 먹였을 경우 auto 지정이 되지 않습니다.

      -> 그렇다면 display: inline-block을 먹이고 나서 중앙에 (좌우만) 위치시키고 싶다면?
        : div 태그의 부모 요소인 body 태그에 text-align 속성을 center로 지정하면 됩니다.

    이상의 결과에서 알 수 있는 점은 inline block 요소는 박스 형태를 유지하지만 
    inline 요소처럼 text 흐름을 따라가기 때문에 (부모의)text-align을 통한 배치가 가능합니다.




  3. 테두리 속성 : 여태까지 잘 안 다뤘던 부분에 해당하는데, 해당 요소를 강조할 때 사용.
    
    3-1. border 속성 :
      border는 테두리, 즉 어떤 요소의 테두리 모양을 설정하는 class
      형식 :
        border: 2px solid black;
        border: 0.5em dashed black;
        border: 1.5vmin dotted orange;

    07_border 생성하세요

    3-2. box-sizing 속성 :
      box-sizing: content-box;
      width: 440px;
      으로 작성한다고 가정했을 때,
      박스에서의 컨텐츠 영역(즉, margin과 padding을 포함한 개념이 아닌)만 440px에 해당하는 것을 의미합니다.

      box-sizing: border-box;
      width: 440px
      으로 작성한다고 가정했을 때,
      박스에서의 영역은 padding과 border를 포함하여 440px에 해당함을 의미합니다.

    3-3. border-radius 속성 :
      박스 모델의 모서리를 둥글게 지저할 때 사용
      (1) 값을 하나로 지정하는 경우 - 상하좌우
      (2) 값을 두 개로 지정하는 경우 - 첫 번째 : 상단 왼쪽과 하단 오른쪽 / 두 번째 : 상단 오른쪽과 하단 왼쪽
      (3) 값을 네 개로 지정하는 경우 - 상단 왼쪽 모서리부터 시계 방향으로 회전

    08_borderradius 생성하세요

    3-4. overflow 속성 :
      부모 요소보다 height / width가 큰 자식 요소를 나타내는 방법을 지정
        기본적으로 overflow는 auto로 설정되어있습니다.
          -> 자식 요소가 부모 요소보다 큰 경우(가로, 세로 전부 다 포함하여) 스크롤 바를 자동으로 생성

      overflow: auto; : 이럴 필요는 잘 없습니다.
      overflow: visible; : 부모 영역을 벗어난 자식 요소를 그대로 보여줌.
      overflow: hidden; : 부모 영역을 벗어나는 부분은 아예 보여주지 않음.
      overflow: scroll; : auto와 비슷하게 부모 영역을 넘어가면 스크롤 바를 생성하는데,
        차이점으로는 자식 요소가 부모 요소를 넘어가지 않더라도 일단 스크롤 바가 만들어짐.

        그러면 굳이 scroll을 지정해야 할 필요성?
          자식 요소의 크기에 따라서 스크롤 바가 나타나기도 / 그렇지 않기도 하기 때문에 
          페이지의 가로 너비가 유동적으로 보이게 됩니다.
          즉, 어떤 요소를 크기에 관계없이 한 곳에 고정시켜 일관적으로 보여주고자 한다면
          scroll 속성을 지정하여 무조건 나타나도록 하는 편이 나을 수 있습니다.
      
      overflow-x / overflow-y 가로 세로를 따로따로 지정하는 것도 가능




  4. 박스 그림자 속성 :
    box-shadow: (inset 여부) offset-x, offset-y (blur-radius) (spread-radius) color
                             x축 두께, y축 두께  퍼짐 효과 크기  그림자 크기

    spread-radius의 경우 음수값을 지정할 수 있는데,
    그 경우 그림자의 크기가 상자보다 작아지는 효과가 있음.

    inset : 박스의 안쪽에 그림자를 만드는 효과

    blur-radius : 박스 사이즈를 침범하여 그림자를 만드는 효과

    09_boxshadow 생성하세요

    그림자 효과를 설정하는 사이트 사례 :
    https://shadows.brumm.af/
      그림자를 여러 모양으로 조절할 수 있는 도구를 보여주는데,
      마우스로 박스 영역의 그림자를 조절하는 수치에 따라서 그에 맞는 CSS 코드를 직관적으로 보여주는 편.

    개발자 도구와 함께 사용해도 좋습니다.
    ctrl + shift + c 누른 상태로 그림자 효과 줄 애를 선택하면 style 창이 나타납니다.
    거기서 box-shadow 속성을 지정해두었다면 그 자리에서 편집이 가능.




  5. 색 표현하기
    CSS는 색을 표현하는 다양한 방식을 제공하기 때문에 상황에 맞추어서 취사 선택할 수 있도록 하겠습니다.

    1. 색을 표현하는 방법

      1-1. keyword : 색상 이름을 그대로 명시하는 방법
        키워드는 구글에서 css color mdn 검색하시면 나옵니다.

      1-2. RGB / RGB(A) : 빛의 3원색을 조합해 색을 나타내는 방법
        수치 / 퍼센트를 사용해서 표기함.
        수치 : 0 ~ 255
        퍼센트 : 수치 255가 100%에 해당

        그러면 RGB(A)의 A는 알파값 -> 불투명도를 나타냄
        ex) rgba(0, 0, 0, 0, 25) : 시커멓게 되어있는데, 25%의 불투명도를 지니기 때문에 회색처럼 보임.
          알파값이 높을 수록 불투명도가 높아지고, 낮을 수록 투명하게 보임

      1-3. HEX : 16진수로 표현한 RGB값
        #FFFFFF : 가장 높은 값으로 rgb(255, 255, 255)를 의미함

      1-4. HSL(A) : 색상, 채도, 명도, 알파값을 순서대로 표기한 것으로,
        채도 : 색이 얼마나 분명하게 나타나는 지
        명도 : 색의 밝은 정도

    10_csscolor 생성하세요




  6. 배경 꾸미기
    : 원하는 색을 지정 / 이미지를 원하는 방법대로 배치하는 등의 역할

    배경 관련 속성 팁
      "background-"에 해당하는 속성명을 지님

    1. 이미지를 배경에 사용 하기
      1-1. background-image 속성 :
        배경에 색상 지정하는 대신에 특정 이미지 파일을 넣고 싶을 때,
        background-image 속성에 해당 이미지가 있는 절대 경로 / 상대 경로를 URL 값으로 지정할 수 있음

      https://showcases.yalco.kr/html-css/02-08/01.html

      1-2. background-repeat 속성 :
        배경 크기가 삽입한 이미지보다 큰 경우 (위 사이트 기준으로 div)
        삽입한 이미지를 가로세로로 반복해서 나타납니다.
        background-repeat: repeat; : 기본값
        background-repeat: no-repeat; : 한 번만 나타남
        background-repeat: repeat-x; : 가로만 채움
        background-repeat: repeat-y; : 세로만 채움
        background-repeat: space; : 배경의 모서리를 먼저 채우고, 남는 부분을 비율에 맞춰 집어 넣음 -> 잘 안쓰임
        background-repeat: round; : 이미지 안 잘리고 채워넣어줌
        background-repeat: repeat space; : 첫 번째 값 가로 / 두번 째 값 세로

      1-3. background-position 속성 : 
        no-repeat 기준으로 설명합니다.
        background-position: top / bottom / left / right는 기본이니까 지나가지만,
        background-position: center;
        background-position: 50% 50% : x축 50% / y축 50%이기 때문에 center와 결과값이 같습니다.

      1-4. background-size 속성 : 
        배경 이미지 크기 지정

        background-size: auto; : 이미지의 원래 크기대로 표현
          사이트 사례의 경우 이미지가 div 영역보다 훨씬 크기 때문에 잘려서 표현되었습니다.
        background-size: 10%; : % 상대값 표기 가능 (이미지의 10% / div 10% 아닙니다.)
        background-size: 100px 150px; : 가로 100 / 세로 150픽셀의 절대값 사용 가능
        background-size: contain; : 전체 div 영역에서 긴 부분 영역을 자동으로 맞춰줌.
          background-size: contain; + background-position: center; 와 함께 사용할 경우
          가운데에 하나의 이미지가 고정된 형태가 되기 때문에 여러 사이트에서 사용되는 경우가 많습니다.
        background-size: cover; : div 사이즈만큼(배경 사이즈만큼) 여백 공간을 남기지 않고 해당 이미지로 전부 채울 경우 사용
          (사진의 크기에 따라 가로세로가 잘릴 수 있음)

    chapter08 폴더 생성하세요
    01_bakcground 파일들 생성하세요




  6. 배경 그라데이션 넣기 :
    두 가지 이상의 색을 사용하여 두 색을 점점 변화시켜 가며 채색하는 방법
    02_gradient 생성하세요




  7. 포지셔닝 :
    HTML로 만든 웹 페이지는 하나의 기기로만 여는 것이 아니라서 위치값이 상대적입니다.
    즉 상대적인 요소를 잡는 데 포지셔닝이 중요한 역할을 함.

      1. position 속성 : 
      https://showcases.yalco.kr/html-css/02-09/01.html 참조

        사이트 내부를 확인했을 때
        커다란 div(class="container") 내에 8개의 회색 div과 오렌지색 div(class="orange")가 있고,
        오렌지 div 내부에 더 작은 div(class="red")가 있습니다.

        orange / red를 움직이면서 position 개념 학습.

        position 속성의 경우 HTML 요소들이 해당 페이지에서 어떻게 배치될 지를 지정함.
          -> 중요한 점은 : 부모 요소의 것이 자식 속성에게 상속되지 '않음'
          cf - font-size의 경우 자식에게 상대값 형태(em)으로 상속이 되었던 것과 차이가 있습니다.

          1) static : top 30px left 30px 입력하더라도 페이지 상 변화 x
            즉 static의 경우에는 원래 존재하는 페이지의 요소대로 따르기 때문에 위치 속성 지정을 하더라도 소용 없음
              -> static(정적)인 상태

          2) relative : 원래 있던 위치를 기준으로 top / left / right 등의 속성값이 적용됨.
            -> 요소 위치는 이동하는데 공백 위치는 그대로 유지됨 : 회색 상자들은 안움직였음